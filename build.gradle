apply plugin: "java"
apply plugin: "groovy"

sourceCompatibility=JavaVersion.VERSION_1_7
targetCompatibility=JavaVersion.VERSION_1_7

repositories {
    mavenCentral()
    //maven { url "http://m2.neo4j.org/content/repositories/releases/" }
    maven {url "https://raw.github.com/neo4j-contrib/m2/master/releases" }
}

configurations {
    fat {
        description = "fatjar"
        transitive = true
    }
}

ext {
    neo4jVersion = "2.2.1"
    jerseyVersion = "1.18.1"
    luceneVersion = "3.6.2" // NB: make sure to use the same version shipping with Neo4j
}

version = "0.1"
group="org.neo4j.contrib.fti"
  
dependencies {
    testCompile group: "org.codehaus.groovy", name: "groovy-all", version: "2.4.3"
    compile group: 'org.neo4j', name: 'neo4j-kernel', version: neo4jVersion
    compile group: 'org.neo4j', name: 'neo4j-lucene-index', version: neo4jVersion
    compile group: 'org.neo4j', name: 'server-api', version: neo4jVersion
    compile group: 'org.apache.lucene', name: 'lucene-analyzers', version: luceneVersion
    compile group: 'org.apache.lucene', name: 'lucene-queries', version: luceneVersion
    compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13'
    testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
    testCompile "org.neo4j.contrib:neo4j-spock-extension:0.5.2"
    testCompile group: 'org.neo4j', name: 'neo4j-kernel', version: neo4jVersion, classifier: 'tests'
    testCompile group: 'org.neo4j.app', name: 'neo4j-server', version: neo4jVersion, classifier: 'tests'
    testCompile group: 'org.neo4j.app', name: 'neo4j-server', version: neo4jVersion
    testCompile group: 'com.sun.jersey', name: 'jersey-core', version: jerseyVersion
    testCompile group: 'com.sun.jersey', name: 'jersey-client', version: jerseyVersion

    fat group: 'org.apache.lucene', name: 'lucene-analyzers', version: luceneVersion
    fat group: 'org.apache.lucene', name: 'lucene-queries', version: luceneVersion
//    fat 'org.glassfish.jersey.media:jersey-media-json-jackson:2.13'

}

task fatJar(type: Jar) {
    baseName = project.name + '-all'
    from {
           configurations.fat.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}